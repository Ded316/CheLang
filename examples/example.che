# COMENTARIOS
# esquema del ejemplo:
#      Expresion en CheLang => return / expresion regular
#      NO HAY CaSe SenSiTiVe keywords. Readme usa camelCase para claridad
#
# Operaciones:
#      ma => +
#      meno => -
#      por => *
#      dividido => / (retorna flotante)
#      aLa => **
#      moduleame => % (modulo)
#      () => ()

#      "menem" => "menem" (strings)
#      ["menem", "evita", 23] => ["menem", "evita", 23]


#ej:
 che x es   2.3 ma 2             # => 4.3
 che x es   .8 ma 2              # => 2.8
 che x es   .8 meno 2            # => -1.2
 che x es   2 por 5              # => 20
 che x es   2 aLa 2              # => 4
 che x es   1 ma 2 por 3         # => 9
 che x es   1 ma (2 por 3)       # => 7
 che x es   10 dividido 2        # => 5.0
 che x es   5 moduleame 2        # => 1
 che x es   6 moduleame 2        # => 0

 che x es   "a" por 10                    # => "aaaaaaaaaa"

 che x es   "marado " ma "marado"         # => "marado marado"

 che x es     ["a","b","c"] ma "d"        # => ["a","b","c","d"]
 che x es     ["a","b","c"] ma ["d","e"]  # => ["a","b","c","d","e"]
 che x es     ["a","b"] por 3             # => ["a","b","a","b",a,"b"]
 che x es     ["a","b"][0]                # => "a"


#Declaracion de variables:

#      che (nombreDeVariable) es (valor)
#      che (nombreDeVariable) seigual (valor)
#      che (nombreDeVariable) son (valor)

 che messi es 10
 che mate es "la que va"
 che sueldo seigual 0
 che doYdo son 4

 mate               # => la que va
 messi               # => 10
 sueldo              # => 0
 doYdo              # => 4

#Declaracion de multiples variables:

#      che (nombreDeVariable) es che (nombreDeVariable2) es ... es (valor)

 che a es che b es che c es 32       # => todas esas variables son 32

#      che (nombreDeVariable), (nombreDeVariable2) ... es (valor)

 che marado, messi, elQueLlevaPelota son 10     # marado, messi y elQueLlevaPelota son 10 (Unos master)

#Condiciones:
#  (1 => true 0 => false)

#      anda por      => ==
#      no es        => !=
#      es nakever   => !=

#      es unCachitoMeno =>   <
#      es menorOIgual   =>   <=

#      es unCachitoMa   =>   >
#      es mayorOIgual   =>   >=

#      es maomeno => +- (Es como == pero con un 20% de pifie. Re piola. Fijate los ejemplos de abajo)

#ej:
      1 anda por 1         # => 1
      a anda por 1         # => 0
      a anda por 32        # => 1
      a no es b            # => 0
      a no es 2            # => 1
      a es nakever 2       # => 1
      a es nakever b       # => 0

      5 es unCachitoMeno 6      # => 1
      5 es unCachitoMeno 4      # => 0

      10 es maomeno 13          # => 0
      10 es maomeno 12          # => 1
      10 es maomeno 8           # => 1
      10 es maomeno 10          # => 1

      "abc" anda por "abc"       # => 1
      "" anda por ""             # => 0  (Si el string tiene uno o mas caracteres manda true)

#Combinacion de condiciones:
#      y => and / &&
#      o => or / ||

      1 anda por 1 y 2 anda por 2    # => 1
      1 anda por 1 y 2 anda por 1    # => 0
      1 anda por 2 y 2 anda por 1    # => 0

      1 anda por 1 o 2 anda por 2    # => 1
      1 anda por 1 o 2 anda por 1    # => 1
      1 anda por 2 o 2 anda por 1    # => 0


# Los ifes y esas cosas:
#      ponele que => if
#      tonce      => then
#      oSi        => elif
#      aLoSumo    => else

# InLine:
      ponele que messi no es 10 tonce 0 aLoSumo 1  # => 1
      ponele que messi no es 9 tonce 0 aLoSumo 1   # => 0

      ponele que a no es messi tonce 0 oSi a anda por a tonce 1 aLoSumo 6      # => 0

      ponele que a no es a tonce 0 oSi messi anda por messi tonce 1 aLoSumo 6  # => 1

#Multiline:

    ponele que messi no es 10 tonce 
        che a es 0
    aLoSumo 
        che a es 1
    hastaaca            # a => 1


    ponele que messi no es 9 tonce 
    che a es 0
    aLoSumo
    che a es 1
    hastaaca           # a => 0


    ponele que 1 no es 1 tonce 
        che b es 0
    oSi 3 anda por 3 tonce
        che b es 1
    aLoSumo
        che b es 6
    hastaaca           # => 1


    ponele que a no es a tonce 
        che c es 0
    oSi messi anda por meno 10 tonce 
        che c es 1 
    aLoSumo 
        che c es 6
    hastaaca           # c => 6

# For / While:
#      agarra por => for
#      hasta      => to
#      de a       => step
#      tonce      => then
#      mientras   => while
#      piquete    => break
#      segui de largo => continue

        che mirtha es 0
        agarra por i seigual 0 hasta 10 tonce 
            che mirtha es mirtha ma 30  
        hastaaca           # => mirtha = 300

        che mirtha es 0
        agarra por i es 0 hasta 10 de a 2 tonce 
           che mirtha es mirtha ma 30
        hastaaca           # => mirtha = 150

#      mientras 1 es 1 tonce 
#        che mirtha es mirtha ma 1  # => loop infinito => mirtha forever
      
      che i es 0
      mientras i es unCachitoMa meno 10 tonce
        che i es i meno 1
      hastaaca    # => i = -10

#funciones:
#      definime       => def / function
#      (a, b, c) => (a, b, c)
#      =>        =>  () => expr (Solo acepta una expresion. No hay "hastaaca" final.)
#      hastaaca  => } (Acepta una o mas expresiones)
#      tirame  => return

      definime fibonacci(n)=> ponele que n anda por 0 tonce 0 oSi n anda por 1 tonce 1 aLoSumo (fibonacci(n meno 1) ma fibonacci(n meno 2))

      definime fibonacci(n) => 
            ponele que n anda por 0 tonce
                  tirame 0 
            oSi n anda por 1 tonce 
                  tirame 1 
            aLoSumo 
                  tirame (fibonacci(n meno 1) ma fibonacci(n meno 2))
            hastaaca
      
      Cuchame( fibonacci(10) ) #(just one expr (the if))

      definime bienvenido()
            che name es Traeme("Decime tu nombre, dale: ")
            Cuchame("Que onda " ma name ma ". Todo bien?")
      hastaaca

      bienvenido()   #(Acepta varias expresiones. El tema de la variable y el Cuchame)

#Cosas de fabrica:
#      Constantes:
            Milanesa  # = "Carne"
            Macri     # = "Gato"
            AltoGuiso # = 15
            Vacio     # =  Empty (Ojo que con esto no se puede operar. Es como un cirujano con parkinson)
            Inviable  # =  Number.null
            Chamuyo   # =  Number.false
            Posta     # =  Number.true
            Pi        # =  Number.math_PI

#     Funciones:
#            Cuchame()         => print()              => Imprimir en consola
#            CuchameRet()      => return print         => Retorna el print
#            Traeme()          => input("input str"?)  => Input en consola
#            TraemeNumerito()  => input("input str"?) (int) => Input en consola (Solo numeros)
#            Limpiame()        => clear console        => Limpia consola
#            clear()           => clear console        => Limpia consola
#            EsNumerito()      => isNumber(int)        => True si es numero, false si no
#            EsTexto()         => isString(str)        => True si es string, false si no
#            EsLista()         => isList([])           => True si es lista, false si no
#            EsFuncion()       => isFunc(fun)          => True si es funcion, false si no
#            Agregale()        => append(list, element) => Le agrega un elemento a una lista
#            Rajale()          => pop(list, index)     => Le saca un elemento a una lista
#            Metele()          => extend(listA,listB)  => Agrega una lista a otra
#            TaLargo()         => len(list or string)  => Retorna la longitud de la lista o string
#            Correme()         => run("path/file.che") => Ejecuta un archivo (Solo .che)
#            Chorro()          => Probalo que esta re piola
#            Argentina()       => Probalo que esta re piola
#            Boludear(n)       => sleep(seconds)       => Espera n segundos
#            Viborita(str)     => eval(str) => Usa python adentro de CheLang. Re pawerful. Retorna el return de python en string
#            ANumerito(n-str)  => int(n-str)           => Convierte string o numero a int
#            AFlotantito(n-str)=> float(n-str)         => Convierte string o numero a float
#            ATextito(*)       => str(*)               => Convierte string o numero a string
#            FloatYPico(n-str) => float(n-str) +- .5   => Da un float mas o menos cerca al numero
#            Dolar()           => Tira el precio del dolar actual  => Tira el precio actual del dolar
#            Campora()         => Probalo que esta re piola
#            HalloEbribodi()   => Probalo que esta re piola
#            Sumate(list[n])   => sum(list[n])         => Retorna la suma de la lista, solo numeros
#            ElMasGrande()     => Probalo que esta re piola